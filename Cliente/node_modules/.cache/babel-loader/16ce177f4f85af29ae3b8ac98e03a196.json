{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/andresbustos/mern/Cliente/src/context/tareas/tareaState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n  _s();\n\n  const initialState = {\n    tareasproyecto: [],\n    errortarea: false,\n    tareaseleccionada: null\n  }; // Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); //crear las funciones\n  //Obtener las tareas de un proyecto\n\n  const obtenerTareas = async proyecto => {\n    try {\n      const resultado = await clienteAxios.get('/api/tareas', {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: TAREAS_PROYECTO,\n        payload: resultado.data.tareas\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Agregar Tarea\n\n\n  const agregarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.post('/api/tareas', tarea);\n      dispatch({\n        type: AGREGAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Validar tarea\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; //Eliminar tarea por id\n\n\n  const eliminarTarea = async (id, proyecto) => {\n    try {\n      await clienteAxios.delete(`/api/tareas/${id}`, {\n        params: {\n          proyecto\n        }\n      });\n      dispatch({\n        type: ELIMINAR_TAREA,\n        payload: id\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //EDITA UNA TAREA\n\n\n  const actualizarTarea = async tarea => {\n    try {\n      const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`, tarea);\n      dispatch({\n        type: ACTUALIZAR_TAREA,\n        payload: resultado.data.tarea\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Tarea actual\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      agregarTarea,\n      obtenerTareas,\n      validarTarea,\n      eliminarTarea,\n      guardarTareaActual,\n      actualizarTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TareaState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["/Users/andresbustos/mern/Cliente/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","clienteAxios","TareaState","props","initialState","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","proyecto","resultado","get","params","type","payload","data","tareas","error","console","log","agregarTarea","tarea","post","validarTarea","eliminarTarea","id","delete","actualizarTarea","put","_id","guardarTareaActual","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n    const initialState = {\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null,\n    }\n    // Crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    //crear las funciones\n\n\n    //Obtener las tareas de un proyecto\n    const obtenerTareas = async proyecto => {\n        try {\n            const resultado = await clienteAxios.get('/api/tareas', {params: {proyecto}});\n            dispatch ({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas,\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //Agregar Tarea\n    const agregarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: resultado.data.tarea,\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //Validar tarea\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA,\n        })\n    }\n\n    //Eliminar tarea por id\n    const eliminarTarea = async (id, proyecto) => {\n        try {\n            await clienteAxios.delete(`/api/tareas/${id}`, {params: {proyecto}});\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id,\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n     //EDITA UNA TAREA\n     const actualizarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea);\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //Tarea actual\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                tareasproyecto : state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                agregarTarea,\n                obtenerTareas,\n                validarTarea,\n                eliminarTarea,\n                guardarTareaActual,\n                actualizarTarea\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    )\n}\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}