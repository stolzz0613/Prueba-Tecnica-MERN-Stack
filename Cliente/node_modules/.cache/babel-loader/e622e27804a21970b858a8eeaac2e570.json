{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/andresbustos/mern/Cliente/src/context/autenticacion/authState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\nimport clienteAxios from '../../config/axios';\nimport authToken from '../../config/authToken';\nimport { REGISTRO_EXITOSO, REGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION } from '../../types';\n\nconst AuthState = props => {\n  _s();\n\n  const initialState = {\n    token: localStorage.getItem('token'),\n    autenticado: null,\n    usuario: null,\n    mensaje: null,\n    cargando: true\n  };\n  const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n  const registrarUsuario = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('/api/usuarios', datos);\n      console.log(respuesta.data);\n      dispatch({\n        type: REGISTRO_EXITOSO,\n        payload: respuesta.data\n      }); //Obtener el usuario\n\n      usuarioAutenticado();\n    } catch (error) {\n      console.log(error.response);\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: REGISTRO_ERROR,\n        payload: alerta\n      });\n    }\n  }; //retorna el usuario autenticado\n\n\n  const usuarioAutenticado = async () => {\n    const token = localStorage.getItem('token');\n\n    if (token) {\n      authToken(token);\n    }\n\n    try {\n      const respuesta = await clienteAxios.get('/api/auth');\n      dispatch({\n        type: OBTENER_USUARIO,\n        payload: respuesta.data.usuario\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: LOGIN_ERROR\n      });\n    }\n  }; //Cuando el usuario inicia sesion\n\n\n  const iniciarSesion = async datos => {\n    try {\n      const respuesta = await clienteAxios.post('/api/auth', datos);\n      dispatch({\n        type: LOGIN_EXITOSO,\n        payload: respuesta.data\n      });\n      usuarioAutenticado();\n    } catch (error) {\n      const alerta = {\n        msg: error.response.data.msg,\n        categoria: 'alerta-error'\n      };\n      dispatch({\n        type: LOGIN_ERROR,\n        payload: alerta\n      });\n    }\n  }; //Cerrar sesion del usuario\n\n\n  const cerrarSesion = () => {\n    dispatch({\n      type: CERRAR_SESION\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      token: state.token,\n      autenticado: state.autenticado,\n      usuario: state.usuario,\n      mensaje: state.mensaje,\n      registrarUsuario,\n      iniciarSesion,\n      usuarioAutenticado,\n      cerrarSesion\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 105,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = AuthState;\nexport default AuthState;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthState\");","map":{"version":3,"sources":["/Users/andresbustos/mern/Cliente/src/context/autenticacion/authState.js"],"names":["React","useReducer","AuthContext","AuthReducer","clienteAxios","authToken","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","AuthState","props","initialState","token","localStorage","getItem","autenticado","usuario","mensaje","cargando","state","dispatch","registrarUsuario","datos","respuesta","post","console","log","data","type","payload","usuarioAutenticado","error","response","alerta","msg","categoria","get","iniciarSesion","cerrarSesion","children"],"mappings":"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","sourcesContent":["import React, {useReducer} from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\n\nimport clienteAxios from '../../config/axios';\nimport authToken from '../../config/authToken';\n\nimport {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION,\n} from '../../types';\n\nconst AuthState = props => {\n    \n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n        cargando: true,\n    }\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    const registrarUsuario = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\n            console.log(respuesta.data);\n\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data,\n            })\n\n            //Obtener el usuario\n            usuarioAutenticado();\n        } catch (error) {\n            console.log(error.response);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    //retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token');\n        if(token) {\n            authToken(token);\n        }\n        try {\n            const respuesta = await clienteAxios.get('/api/auth');\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            });\n        } catch (error) {\n            console.log(error)\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    //Cuando el usuario inicia sesion\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos);\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            });\n\n            usuarioAutenticado();\n        } catch (error) {\n            \n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n     //Cerrar sesion del usuario\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    return(\n        <AuthContext.Provider\n            value = {{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\nexport default AuthState;"]},"metadata":{},"sourceType":"module"}