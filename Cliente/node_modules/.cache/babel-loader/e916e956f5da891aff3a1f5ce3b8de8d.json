{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/andresbustos/mern/src/context/tareas/tareaState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA, ESTADO_TAREA, TAREA_ACTUAL, ACTUALIZAR_TAREA } from '../../types';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst TareaState = props => {\n  _s();\n\n  const initialState = {\n    tareas: [{\n      id: 1,\n      proyectoId: 1,\n      nombre: 'Elegir Plataforma',\n      estado: true\n    }, {\n      id: 2,\n      proyectoId: 2,\n      nombre: 'Elegir Colores',\n      estado: false\n    }, {\n      id: 3,\n      proyectoId: 2,\n      nombre: 'Elegir Plataformas de Pago',\n      estado: false\n    }, {\n      id: 4,\n      proyectoId: 3,\n      nombre: 'Elegir Hosting',\n      estado: true\n    }],\n    tareasproyecto: null,\n    errortarea: false,\n    tareaseleccionada: null\n  }; // Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); //crear las funciones\n  //Obtener las tareas de un proyecto\n\n  const obtenerTareas = proyectoId => {\n    tarea.id = uuidv4();\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; //Agregar Tarea\n\n\n  const agregarTarea = tarea => {\n    dispatch({\n      type: AGREGAR_TAREA,\n      payload: tarea\n    });\n  }; //Validar tarea\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; //Eliminar tarea por id\n\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  }; //Cambia el estado de cada tarea\n\n\n  const cambiarEstadoTarea = tarea => {\n    dispatch({\n      type: ESTADO_TAREA,\n      payload: tarea\n    });\n  }; //Tarea actual\n\n\n  const guardarTareaActual = tarea => {\n    dispatch({\n      type: TAREA_ACTUAL,\n      payload: tarea\n    });\n  }; //EDITA UNA TAREA\n\n\n  const actualizarTarea = tarea => {\n    dispatch({\n      type: ACTUALIZAR_TAREA,\n      payload: tarea\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      tareas: state.tareas,\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      tareaseleccionada: state.tareaseleccionada,\n      agregarTarea,\n      obtenerTareas,\n      validarTarea,\n      eliminarTarea,\n      cambiarEstadoTarea,\n      guardarTareaActual,\n      actualizarTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TareaState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["/Users/andresbustos/mern/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","ESTADO_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","v4","uuidv4","TareaState","props","initialState","tareas","id","proyectoId","nombre","estado","tareasproyecto","errortarea","tareaseleccionada","state","dispatch","obtenerTareas","tarea","type","payload","agregarTarea","validarTarea","eliminarTarea","cambiarEstadoTarea","guardarTareaActual","actualizarTarea","children"],"mappings":"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","sourcesContent":["import React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    ESTADO_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA\n} from '../../types';\nimport {v4 as uuidv4} from 'uuid';\n\nconst TareaState = props => {\n    const initialState = {\n        tareas : [\n            {id: 1, proyectoId: 1, nombre: 'Elegir Plataforma', estado: true},\n            {id: 2, proyectoId: 2, nombre: 'Elegir Colores', estado: false},\n            {id: 3, proyectoId: 2, nombre: 'Elegir Plataformas de Pago', estado: false},\n            {id: 4, proyectoId: 3, nombre: 'Elegir Hosting', estado: true},\n        ],\n        tareasproyecto: null,\n        errortarea: false,\n        tareaseleccionada: null,\n    }\n    // Crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    //crear las funciones\n\n\n    //Obtener las tareas de un proyecto\n    const obtenerTareas = proyectoId => {\n        tarea.id = uuidv4();\n        dispatch ({\n            type: TAREAS_PROYECTO,\n            payload: proyectoId,\n        })\n    }\n\n    //Agregar Tarea\n    const agregarTarea = tarea => {\n        dispatch({\n            type: AGREGAR_TAREA,\n            payload: tarea,\n        })\n    }\n\n    //Validar tarea\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA,\n        })\n    }\n\n    //Eliminar tarea por id\n    const eliminarTarea = id => {\n        dispatch({\n            type: ELIMINAR_TAREA,\n            payload: id,\n        })\n    }\n\n    //Cambia el estado de cada tarea\n    const cambiarEstadoTarea = tarea => {\n        dispatch({\n            type: ESTADO_TAREA,\n            payload: tarea,\n        })\n    }\n\n    //Tarea actual\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n    //EDITA UNA TAREA\n    const actualizarTarea = tarea => {\n        dispatch({\n            type: ACTUALIZAR_TAREA,\n            payload: tarea,\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                tareas: state.tareas,\n                tareasproyecto : state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                agregarTarea,\n                obtenerTareas,\n                validarTarea,\n                eliminarTarea,\n                cambiarEstadoTarea,\n                guardarTareaActual,\n                actualizarTarea\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    )\n}\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}