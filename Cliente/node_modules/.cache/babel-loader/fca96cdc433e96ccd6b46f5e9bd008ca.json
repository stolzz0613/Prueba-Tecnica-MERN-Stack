{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/andresbustos/mern/src/context/tareas/tareaState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport { TAREAS_PROYECTO, AGREGAR_TAREA, VALIDAR_TAREA, ELIMINAR_TAREA } from '../../types';\n\nconst TareaState = props => {\n  _s();\n\n  const initialState = {\n    tareas: [{\n      proyectoId: 1,\n      nombre: 'Elegir Plataforma',\n      estado: true\n    }, {\n      proyectoId: 2,\n      nombre: 'Elegir Colores',\n      estado: false\n    }, {\n      proyectoId: 2,\n      nombre: 'Elegir Plataformas de Pago',\n      estado: false\n    }, {\n      proyectoId: 3,\n      nombre: 'Elegir Hosting',\n      estado: true\n    }],\n    tareasproyecto: null,\n    errortarea: false\n  }; // Crear dispatch y state\n\n  const [state, dispatch] = useReducer(TareaReducer, initialState); //crear las funciones\n  //Obtener las tareas de un proyecto\n\n  const obtenerTareas = proyectoId => {\n    dispatch({\n      type: TAREAS_PROYECTO,\n      payload: proyectoId\n    });\n  }; //Agregar Tarea\n\n\n  const agregarTarea = tarea => {\n    dispatch({\n      type: AGREGAR_TAREA,\n      payload: tarea\n    });\n  }; //Validar tarea\n\n\n  const validarTarea = () => {\n    dispatch({\n      type: VALIDAR_TAREA\n    });\n  }; //Eliminar tarea por id\n\n\n  const eliminarTarea = id => {\n    dispatch({\n      type: ELIMINAR_TAREA,\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TareaContext.Provider, {\n    value: {\n      tareas: state.tareas,\n      tareasproyecto: state.tareasproyecto,\n      errortarea: state.errortarea,\n      agregarTarea,\n      obtenerTareas,\n      validarTarea,\n      eliminarTarea\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TareaState, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = TareaState;\nexport default TareaState;\n\nvar _c;\n\n$RefreshReg$(_c, \"TareaState\");","map":{"version":3,"sources":["/Users/andresbustos/mern/src/context/tareas/tareaState.js"],"names":["React","useReducer","TareaContext","TareaReducer","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TareaState","props","initialState","tareas","proyectoId","nombre","estado","tareasproyecto","errortarea","state","dispatch","obtenerTareas","type","payload","agregarTarea","tarea","validarTarea","eliminarTarea","id","children"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SACIC,eADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,cAJJ,QAKO,aALP;;AAOA,MAAMC,UAAU,GAAGC,KAAK,IAAI;AAAA;;AACxB,QAAMC,YAAY,GAAG;AACjBC,IAAAA,MAAM,EAAG,CACL;AAACC,MAAAA,UAAU,EAAE,CAAb;AAAgBC,MAAAA,MAAM,EAAE,mBAAxB;AAA6CC,MAAAA,MAAM,EAAE;AAArD,KADK,EAEL;AAACF,MAAAA,UAAU,EAAE,CAAb;AAAgBC,MAAAA,MAAM,EAAE,gBAAxB;AAA0CC,MAAAA,MAAM,EAAE;AAAlD,KAFK,EAGL;AAACF,MAAAA,UAAU,EAAE,CAAb;AAAgBC,MAAAA,MAAM,EAAE,4BAAxB;AAAsDC,MAAAA,MAAM,EAAE;AAA9D,KAHK,EAIL;AAACF,MAAAA,UAAU,EAAE,CAAb;AAAgBC,MAAAA,MAAM,EAAE,gBAAxB;AAA0CC,MAAAA,MAAM,EAAE;AAAlD,KAJK,CADQ;AAOjBC,IAAAA,cAAc,EAAE,IAPC;AAQjBC,IAAAA,UAAU,EAAE;AARK,GAArB,CADwB,CAWxB;;AACA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBjB,UAAU,CAACE,YAAD,EAAeO,YAAf,CAApC,CAZwB,CAcxB;AAGA;;AACA,QAAMS,aAAa,GAAGP,UAAU,IAAI;AAChCM,IAAAA,QAAQ,CAAE;AACNE,MAAAA,IAAI,EAAEhB,eADA;AAENiB,MAAAA,OAAO,EAAET;AAFH,KAAF,CAAR;AAIH,GALD,CAlBwB,CAyBxB;;;AACA,QAAMU,YAAY,GAAGC,KAAK,IAAI;AAC1BL,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEf,aADD;AAELgB,MAAAA,OAAO,EAAEE;AAFJ,KAAD,CAAR;AAIH,GALD,CA1BwB,CAiCxB;;;AACA,QAAMC,YAAY,GAAG,MAAM;AACvBN,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEd;AADD,KAAD,CAAR;AAGH,GAJD,CAlCwB,CAwCxB;;;AACA,QAAMmB,aAAa,GAAGC,EAAE,IAAI;AACxBR,IAAAA,QAAQ,CAAC;AACLE,MAAAA,IAAI,EAAEb,cADD;AAELc,MAAAA,OAAO,EAAEK;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,QAAC,YAAD,CAAc,QAAd;AACI,IAAA,KAAK,EAAE;AACHf,MAAAA,MAAM,EAAEM,KAAK,CAACN,MADX;AAEHI,MAAAA,cAAc,EAAGE,KAAK,CAACF,cAFpB;AAGHC,MAAAA,UAAU,EAAEC,KAAK,CAACD,UAHf;AAIHM,MAAAA,YAJG;AAKHH,MAAAA,aALG;AAMHK,MAAAA,YANG;AAOHC,MAAAA;AAPG,KADX;AAAA,cAWKhB,KAAK,CAACkB;AAXX;AAAA;AAAA;AAAA;AAAA,UADJ;AAeH,CA/DD;;GAAMnB,U;;KAAAA,U;AAiEN,eAAeA,UAAf","sourcesContent":["import React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA\n} from '../../types';\n\nconst TareaState = props => {\n    const initialState = {\n        tareas : [\n            {proyectoId: 1, nombre: 'Elegir Plataforma', estado: true},\n            {proyectoId: 2, nombre: 'Elegir Colores', estado: false},\n            {proyectoId: 2, nombre: 'Elegir Plataformas de Pago', estado: false},\n            {proyectoId: 3, nombre: 'Elegir Hosting', estado: true},\n        ],\n        tareasproyecto: null,\n        errortarea: false,\n    }\n    // Crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    //crear las funciones\n\n\n    //Obtener las tareas de un proyecto\n    const obtenerTareas = proyectoId => {\n        dispatch ({\n            type: TAREAS_PROYECTO,\n            payload: proyectoId,\n        })\n    }\n\n    //Agregar Tarea\n    const agregarTarea = tarea => {\n        dispatch({\n            type: AGREGAR_TAREA,\n            payload: tarea,\n        })\n    }\n\n    //Validar tarea\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA,\n        })\n    }\n\n    //Eliminar tarea por id\n    const eliminarTarea = id => {\n        dispatch({\n            type: ELIMINAR_TAREA,\n            payload: id,\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                tareas: state.tareas,\n                tareasproyecto : state.tareasproyecto,\n                errortarea: state.errortarea,\n                agregarTarea,\n                obtenerTareas,\n                validarTarea,\n                eliminarTarea\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    )\n}\n\nexport default TareaState;"]},"metadata":{},"sourceType":"module"}