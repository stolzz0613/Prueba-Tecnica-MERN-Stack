{"version":3,"sources":["context/alertas/alertasContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/SideBar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTarea.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/ProyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertasReducer.js","context/alertas/alertasState.js","context/autenticacion/authReducer.js","config/authToken.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaContext","createContext","authContext","Login","props","useContext","AlertaContext","alerta","mostrarAlerta","AuthContext","mensaje","autenticado","iniciarSesion","useEffect","history","push","msg","categoria","useState","email","password","usuario","setUsuario","onChange","e","target","name","value","className","onSubmit","preventDefault","trim","htmlFor","type","id","placeholder","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","setProyecto","onClick","TareaContext","Proyecto","proyectoActual","obtenerTareas","tareaContext","_id","ListadoProyectos","proyectos","obtenerProyectos","alertasContext","lenght","map","TransitionGroup","CSSTransition","timeout","classNames","SideBar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","agregarTarea","validarTarea","errortarea","tareaseleccionada","actualizarTarea","tarea","setTarea","Tarea","eliminarTarea","guardarTareaActual","cambiarEstado","estado","seleccionarTarea","ListadoTarea","eliminarProyecto","tareasproyecto","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","PROYECTO_ERROR","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","console","log","proyectoId","delete","Provider","children","TareaState","TareaReducer","params","tareas","put","AlertaState","alertaReducer","setTimeout","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","AuthReducer","datos","respuesta","response","authToken","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5468c42a.chunk.js","sourcesContent":["import {createContext} from 'react';\nconst alertaContext = createContext();\n\nexport default alertaContext;","import {createContext} from 'react';\nconst authContext = createContext();\n\nexport default authContext;","import React, {useState, useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertasContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Login = (props) => {\n    \n    //extrer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const {alerta, mostrarAlerta} = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const {mensaje, autenticado, iniciarSesion} = authContext;\n\n    // Si el password o usuario no existe\n    useEffect(() => {\n        if(autenticado) {\n            props.history.push('/proyectos');\n        }\n        \n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n\n    // State para iniciar sesión\n    const [usuario, setUsuario] = useState({\n        email: '',\n        password: '',\n    });\n\n    //Extraer de usuario\n    const {email, password} = usuario;\n    const onChange = e => {\n        setUsuario({\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    //Cuando el usuario inicia sesión\n    const onSubmit = e => {\n        e.preventDefault();\n        // Validar campos vacios \n        if(email.trim() === '' || password.trim() === ''){\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n        }\n        //Pasarlo al action\n        iniciarSesion({email, password});\n    }\n\n    return ( \n        <div className=\"form-usuario\">\n            {\n                alerta \n                    ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>)\n                    : null\n            }\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar Sesión</h1>\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={email}\n                            onChange ={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            value = {password}\n                            onChange ={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input \n                            type=\"submit\" \n                            className=\"btn btn-primario btn-block\"\n                            value =\"Iniciar Sesión\"\n                        />\n                    </div>\n                </form>\n                <Link to={'/nueva-cuenta'} className='enlace-cuenta'>\n                    Obtener Cuenta\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default Login;","import React, {useState, useContext, useEffect} from 'react';\nimport {Link} from 'react-router-dom';\nimport AlertaContext from '../../context/alertas/alertasContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst NuevaCuenta = (props) => {\n    //extrer los valores del context\n    const alertaContext = useContext(AlertaContext);\n    const {alerta, mostrarAlerta} = alertaContext;\n\n    const authContext = useContext(AuthContext);\n    const {mensaje, autenticado, registrarUsuario} = authContext;\n    \n    // Si el usuario se registra, autentica o es un registro duplicado\n    useEffect(() => {\n        if(autenticado){\n            props.history.push('/proyectos');\n        }\n\n        if(mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n        // eslint-disable-next-line\n    }, [mensaje, autenticado, props.history]);\n\n    // State para iniciar sesión\n    const [usuario, setUsuario] = useState({\n        nombre : '',\n        email: '',\n        password: '',\n        confirmar: '',\n    });\n\n    //Extraer de usuario\n    const {nombre, email, password, confirmar} = usuario;\n    const onChange = e => {\n        setUsuario({\n            ...usuario,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    //Cuando el usuario inicia sesión\n    const onSubmit = e => {\n        e.preventDefault();\n        // Validar campos vacios\n        if (\n            nombre.trim() === '' ||\n            email.trim() === '' ||\n            password.trim() === '' ||\n            confirmar.trim() === ''\n        ) {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-error');\n            return;\n        }\n\n        // Password minimo 6 caracteres\n        if(password.length < 6){\n            mostrarAlerta('El password debe ser de minimo 6 caracteres', 'alerta-error');\n            return;\n        }\n\n        //Los 2 passwords son iguales\n        if(password !== confirmar) {\n            mostrarAlerta('Los password no son iguales', 'alerta-error');\n            return;\n        }\n\n        //Pasarlo al action\n        registrarUsuario({nombre, email, password});\n    }\n\n    return (\n        <div className=\"form-usuario\">\n            {\n                alerta \n                    ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>)\n                    : null\n            }\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Obtener Cuenta</h1>\n                <form\n                    onSubmit={onSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"nombre\">Nombre</label>\n                        <input\n                            type=\"text\"\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            placeholder=\"Tu Nombre\"\n                            value={nombre}\n                            onChange ={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu Email\"\n                            value={email}\n                            onChange ={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu Password\"\n                            value = {password}\n                            onChange ={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <label htmlFor=\"confirmar\">Confirmar Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirmar\"\n                            name=\"confirmar\"\n                            placeholder=\"Repite tu Password\"\n                            value = {confirmar}\n                            onChange ={onChange}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input \n                            type=\"submit\" \n                            className=\"btn btn-primario btn-block\"\n                            value =\"Registrarme\"\n                        />\n                    </div>\n                </form>\n                <Link to={'/'} className='enlace-cuenta'>\n                    Volver a Iniciar Sesión\n                </Link>\n            </div>\n        </div>\n     );\n}\n \nexport default NuevaCuenta;","import {createContext} from 'react';\n\nconst proyectoContext = createContext();\n\nexport default proyectoContext;","import React, {useState, useContext} from 'react';\nimport  proyectoContext from \"../../context/proyectos/proyectoContext\";\n\nconst NuevoProyecto = () => {\n    \n    //Obteber el state del formulario\n    const proyectosContext = useContext(proyectoContext);\n    const \n    {\n        formulario,\n        errorformulario,\n        mostrarFormulario,\n        agregarProyecto,\n        mostrarError,\n    } = proyectosContext;\n\n\n    //State para Proyecto\n\n    const [proyecto, setProyecto] = useState({\n        nombre: ''\n    });\n\n    //extraer nombre de proyecto\n\n    const{nombre} = proyecto;\n\n    //Leer contenido\n    const onChangeProyecto = e => {\n        setProyecto({\n            ...proyecto,\n            [e.target.name] : e.target.value\n        });\n    };\n\n    //Cuando se envia un proyecto\n    const onSubmitProyecto = e =>{\n        e.preventDefault();\n\n        //Validar el proyecto\n        if (nombre === ''){\n            mostrarError();\n            return;\n        }\n        //Agregar el state\n        agregarProyecto(proyecto);\n        //Reiniciar el form\n        setProyecto({\n            nombre: '',\n        })\n    }\n\n    return (  \n        <>\n            <button\n                type='button'\n                className='btn btn-block btn-primario'\n                onClick = {() => mostrarFormulario()}\n            >Nuevo Proyecto</button>\n\n            {\n                formulario\n                ?\n                    (\n                        <form\n                            className='formulario-nuevo-proyecto'\n                            onSubmit={onSubmitProyecto}\n                        >\n                            <input\n                                type='text'\n                                className='input-text'\n                                placeholder='Nombre Proyecto'\n                                name='nombre'\n                                value={nombre}\n                                onChange={onChangeProyecto}\n                            />\n\n                            <input\n                                type='submit'\n                                className='btn btn-primario btn-block'\n                                value='Agregar Proyecto'\n                                name='nombre'\n                            />\n\n                        </form>\n                    )\n                : null\n            }\n            {errorformulario ? <p className='mensaje error'>El nombre del Proyecto es obligatorio</p> : null}\n        </>\n    );\n}\n \nexport default NuevoProyecto;","import {createContext} from 'react';\n\nconst TareaContext = createContext();\n\nexport default TareaContext;","import React, {useContext} from 'react';\nimport  proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport  tareaContext from \"../../context/tareas/tareaContext\";\n\nconst Proyecto = ({proyecto}) => {\n\n    //Extraer proyectos state de proyectos\n    const proyectosContext = useContext(proyectoContext);\n    const { proyectoActual } = proyectosContext;\n\n    //obtener funcion context\n\n    const tareasContext = useContext(tareaContext);\n    const {obtenerTareas} = tareasContext;\n\n    const seleccionarProyecto = id => {\n        proyectoActual(id);\n        obtenerTareas(id);\n    }\n\n    return ( \n        <li>\n            <button\n                type='button'\n                className='btn btn-blank'\n                onClick = {() => seleccionarProyecto(proyecto._id)}\n            >{proyecto.nombre}</button>\n        </li>\n     );\n}\n \nexport default Proyecto;","import React, { useContext, useEffect } from 'react';\nimport Proyecto from './Proyecto';\nimport  proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport  {CSSTransition, TransitionGroup } from 'react-transition-group';\nimport AlertaContext from \"../../context/alertas/alertasContext\";\n\nconst ListadoProyectos = () => {\n\n    //Extraer proyectos state inicial\n    const proyectosContext = useContext(proyectoContext);\n    const { mensaje, proyectos, obtenerProyectos} = proyectosContext;\n\n    const alertasContext = useContext(AlertaContext);\n    const {alerta, mostrarAlerta} = alertasContext;\n\n    useEffect(() => {\n        if(mensaje){\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n\n        obtenerProyectos();\n    }, [mensaje])\n    \n    //Revisar si proyecto tiene contenido\n    if(proyectos.lenght === 0) return <p>No hay proyectos, comienza creando uno</p>;\n    \n    return ( \n        <ul className='listado-proyectos'>\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>) : null}\n            {proyectos.map(proyecto => (\n                <TransitionGroup\n                    key = {proyecto._id}\n                >\n                    <CSSTransition\n                         timeout={200}\n                         classNames='proyecto'\n                    >\n                        <Proyecto \n                            proyecto={proyecto}\n                        />\n                    </CSSTransition>\n                </TransitionGroup>\n            ))}\n        </ul>\n     );\n}\n \nexport default ListadoProyectos;","import React from 'react';\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\n\nconst SideBar = () => {\n    return ( \n        <aside>\n            <h1>Prueba Tecnica<span>MERN</span></h1>\n            \n            <NuevoProyecto />\n\n            <div className=\"proyectos\">\n                <h2>Tus Proyectos</h2>\n                <ListadoProyectos />\n            </div>\n        </aside>\n\n     );\n}\n \nexport default SideBar;","import React, {useEffect, useContext} from 'react';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Barra = () => {\n    //Extraer la información \n    const authContext = useContext(AuthContext);\n    const {usuario, usuarioAutenticado, cerrarSesion} = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, []);\n    \n    return ( \n        <header className='app-header'>\n            {\n                usuario \n                    ? <p className = 'nombre-usuario'>Hola <span>{usuario.nombre}</span></p>\n                    : null\n            }\n            <nav className='nav-principal'>\n                <button\n                    className =\"btn btn-blank cerrar-sesion\"\n                    onClick = {() => cerrarSesion()}\n                >Cerrar Sesión</button>\n            </nav>\n        </header>\n     );\n}\n \nexport default Barra;\n","import React, {useContext, useState, useEffect} from 'react';\nimport  proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport  tareaContext from \"../../context/tareas/tareaContext\";\n\nconst FormTarea = () => {\n\n    //Extraer proyectos state inicial\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto} = proyectosContext;\n\n    const tareasContext = useContext(tareaContext);\n    const {\n        obtenerTareas,\n        agregarTarea,\n        validarTarea,\n        errortarea,\n        tareaseleccionada,\n        actualizarTarea\n    } = tareasContext;\n\n\n    //State del formulario\n    const [tarea, setTarea] = useState({\n        nombre: ''\n    })\n\n    useEffect(() => {\n        if(tareaseleccionada !== null) {\n            setTarea(tareaseleccionada)\n        } else {\n            setTarea({\n                nombre: ''\n            })\n        }\n    }, [tareaseleccionada]);\n    //Si no hay proyecto seleccionado\n    if(!proyecto) return null;\n\n    const [proyectoActual] = proyecto;\n\n    //Leer los valores del forulario\n    const handleChane = e => {\n        setTarea({\n            ...tarea,\n            [e.target.name] : e.target.value\n        })\n    }\n\n    const {nombre} = tarea;\n\n    const onSubmit = e => {\n        e.preventDefault();\n        // validar\n        if(nombre.trim() === '') {\n            validarTarea();\n            return;\n        }\n\n        if(tareaseleccionada === null) {\n            //agregar tarea al state \n            tarea.proyecto = proyectoActual._id; \n            agregarTarea(tarea);\n        } else {\n            actualizarTarea(tarea);\n        }\n\n        //Obtener y filtrar las tareas\n        obtenerTareas(proyectoActual.id);\n\n        setTarea({\n            nombre: ''\n        })\n    }\n\n    return ( \n        <div className=\"formulario\">\n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input\n                        type='text'\n                        className='input-text' \n                        placeholder='Nombre Tarea...'\n                        name='nombre'\n                        value={nombre}\n                        onChange={handleChane}\n                    />\n                </div>\n                <div className=\"contenedor-input\">\n                    <input\n                        type='submit'\n                        className='btn btn-primario btn-submit btn-block'\n                        value={tareaseleccionada ? 'Editar Tarea' : 'Agregar Tarea'}\n                    />\n                </div>\n            </form>\n            {errortarea ? <p className='mensaje error'>El nombre de la tarea es obligatorio</p> : null}\n        </div>\n    );\n}\n \nexport default FormTarea;","import React, {useContext} from 'react';\nimport  tareaContext from \"../../context/tareas/tareaContext\";\nimport  proyectoContext from \"../../context/proyectos/proyectoContext\";\n\nconst Tarea = ({tarea}) => {\n\n    //Extraer proyectos state de proyectos\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext;\n\n    const tareasContext = useContext(tareaContext);\n    const {eliminarTarea, actualizarTarea, obtenerTareas, guardarTareaActual} = tareasContext;\n\n    //Función que se ejecuta cuando el usuario presiona el btn de eliminar tarea\n    const tareaEliminar = id => {\n        eliminarTarea(id, proyecto[0]._id);\n        obtenerTareas(proyecto[0]._id);\n    }\n\n    //Funcion que modifica el estado de la tareas\n    const cambiarEstado = tarea => {\n        if(tarea.estado){\n            tarea.estado = false;\n        } else {\n            tarea.estado = true;\n        }\n        actualizarTarea(tarea);\n    }\n\n    const seleccionarTarea = tarea => {\n        guardarTareaActual(tarea);\n    }\n\n    return (\n        <li className=\"tarea sombra\">\n            <p>{tarea.nombre}</p>\n            <div className=\"estado\">\n                {tarea.estado\n                    ? \n                        (\n                            <button\n                                type=\"button\"\n                                className='completo'\n                                onClick={() =>cambiarEstado(tarea)}\n                            >Completo</button>\n                        )\n                    :\n                        (\n                            <button\n                                type=\"button\"\n                                className='incompleto'\n                                onClick={() =>cambiarEstado(tarea)}\n                            >Incompleto</button>\n                        )\n                }\n            </div>\n            <div className=\"acciones\">\n                <button\n                    type='button'\n                    className='btn btn-primario'\n                    onClick = {()=>seleccionarTarea(tarea)}\n                >Editar</button>\n                <button\n                    type='button'\n                    className='btn btn-secundario'\n                    onClick = {() => tareaEliminar(tarea._id)}\n                >Eliminar</button>\n            </div>\n        </li>\n    );\n}\n \nexport default Tarea;","import React, {useContext} from 'react';\nimport Tarea from './Tarea';\nimport  proyectoContext from \"../../context/proyectos/proyectoContext\";\nimport  tareaContext from \"../../context/tareas/tareaContext\";\nimport  {CSSTransition, TransitionGroup } from 'react-transition-group';\n\nconst ListadoTarea = () => {\n\n    //Extraer proyectos state inicial\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto, eliminarProyecto} = proyectosContext;\n\n    const tareasContext = useContext(tareaContext);\n    const {tareasproyecto} = tareasContext;\n\n    //Si no hay proyecto seleccionado\n    if(!proyecto) return <h2>Selecciona un Proyecto</h2>\n\n    const [proyectoActual] = proyecto;\n\n    return (  \n        <>\n            <h2>Proyecto: {proyectoActual.nombre}</h2>\n            <ul className='listado-tareas'>\n                {tareasproyecto.length === 0\n                    ? (<li className='tarea'><p>No hay tareas</p></li>)\n                    : \n                        <TransitionGroup>\n                            {tareasproyecto.map(tarea => (\n                                <CSSTransition\n                                    key={tarea._id}\n                                    timeout={200}\n                                    classNames='tarea'\n                                >\n                                    <Tarea\n                                        tarea={tarea}\n                                    />\n                                </CSSTransition>\n                            ))}\n                        </TransitionGroup>\n                }\n            </ul>\n\n            <button \n                type='button'\n                className='btn btn-eliminar'\n                onClick = {() => eliminarProyecto(proyectoActual._id)}\n            >Eliminar Proyecto &times;</button>\n        </>\n    );\n}\n \nexport default ListadoTarea;\n","import React, {useContext, useEffect} from 'react';\nimport SideBar from '../layout/SideBar';\nimport Barra from '../layout/Barra';\nimport FormTarea from '../tareas/FormTarea';\nimport ListadoTarea from '../tareas/ListadoTarea';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Proyectos = () => {\n    //Extraer la información \n    const authContext = useContext(AuthContext);\n    const {usuarioAutenticado} = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n\n    return ( \n        <div className=\"contenedor-app\">\n            <aside>\n                <SideBar/>\n            </aside>\n            <div className=\"seccion-principal\">\n                <Barra />\n                <main>\n                    <FormTarea />\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTarea />\n                    </div>\n                </main>\n            </div>\n        </div>\n     );\n}\n \nexport default Proyectos;","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\n\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA'; \nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA'; \n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';\n\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\n\n\n","import {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS, \n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    PROYECTO_ERROR,\n    ELIMINAR_PROYECTO,\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type){\n        case FORMULARIO_PROYECTO:\n            return {\n                ...state,\n                formulario: true\n            }\n        case OBTENER_PROYECTOS:\n            return {\n                ...state,\n                proyectos: action.payload\n            }\n        case AGREGAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: [...state.proyectos, action.payload],\n                formulario: false,\n                errorformulario: false,\n            }\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state,\n                errorformulario: true,\n            }\n        case PROYECTO_ACTUAL:\n            return {\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload)\n            }\n        case ELIMINAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\n                proyecto: null,\n            }\n        case PROYECTO_ERROR:\n            return{\n                ...state,\n                mensaje: action.payload,\n            }\n        default:\n            return state;\n    }\n}","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL : process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;\n","import React, {useReducer} from 'react';\n\nimport proyectoReducer from './proyectoReducer';\nimport proyectoContext from './proyectoContext';\nimport {\n    FORMULARIO_PROYECTO, \n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    PROYECTO_ERROR,\n    ELIMINAR_PROYECTO,\n} from '../../types';\nimport clienteAxios from '../../config/axios';\n\n\nconst ProyectoState = props => {\n\n    const proyectos = [\n        {id: 1, nombre: 'Tienda Virtual'},\n        {id: 2, nombre: 'Intraner'},\n        {id: 3, nombre: 'Diseño de Sitio Web'},\n        {id: 4, nombre: 'MERN'},\n    ];\n\n    const initialState = {\n        formulario: false,\n        proyectos: [],\n        errorformulario: false,\n        proyecto: null,\n        mensaje: null,\n    }\n\n    //Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer, initialState)\n\n    //Serie de funciones Crud\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        })\n    }\n\n    //Obtener Proyectos\n    const obtenerProyectos = async () => {\n        try {\n            const resultado = await clienteAxios.get('api/proyectos');\n\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos,\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error',\n            }\n\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta,\n            })\n        }\n    }\n\n    //Agregar nuevo proyecto\n    const agregarProyecto = async proyecto => {\n        try {\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n            console.log(resultado);\n            //Insertar el proyecto en el state\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error',\n            }\n\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta,\n            })\n        }\n    }\n\n    //Validar formulario\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        })\n    }\n\n    //Selecciona el proyecto que el usuario dio click\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload: proyectoId,\n        })\n    }\n\n    //Elimina un proyecto\n    const eliminarProyecto = async proyectoId => {\n        try {\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload: proyectoId,\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'alerta-error',\n            }\n\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta,\n            })\n        }\n    }\n\n    return(\n        <proyectoContext.Provider\n            value = {{\n                proyectos: state.proyectos,\n                formulario : state.formulario,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto,\n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto,\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n}\n\nexport default ProyectoState;","import {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case TAREAS_PROYECTO:\n            return {\n                ...state,\n                tareasproyecto: action.payload,\n            }\n        case AGREGAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: [action.payload, ...state.tareasproyecto],\n                errortarea: false,\n            }\n        case VALIDAR_TAREA:\n            return {\n                ...state,\n                errortarea: true,\n            }\n        case ELIMINAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload)\n            }\n        case ACTUALIZAR_TAREA:\n            return{\n                ...state,\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea),\n                tareaseleccionada: null,\n            }\n        case TAREA_ACTUAL:\n            return {\n                ...state,\n                tareaseleccionada: action.payload,\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\nimport {\n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n    const initialState = {\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null,\n    }\n    // Crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    //crear las funciones\n\n\n    //Obtener las tareas de un proyecto\n    const obtenerTareas = async proyecto => {\n        try {\n            const resultado = await clienteAxios.get('/api/tareas', {params: {proyecto}});\n            dispatch ({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas,\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //Agregar Tarea\n    const agregarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.post('/api/tareas', tarea);\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: resultado.data.tarea,\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    //Validar tarea\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA,\n        })\n    }\n\n    //Eliminar tarea por id\n    const eliminarTarea = async (id, proyecto) => {\n        try {\n            await clienteAxios.delete(`/api/tareas/${id}`, {params: {proyecto}});\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id,\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n     //EDITA UNA TAREA\n     const actualizarTarea = async tarea => {\n        try {\n            const resultado = await clienteAxios.put(`/api/tareas/${tarea._id}`,tarea);\n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea,\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    //Tarea actual\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                tareasproyecto : state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                agregarTarea,\n                obtenerTareas,\n                validarTarea,\n                eliminarTarea,\n                guardarTareaActual,\n                actualizarTarea\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    )\n}\n\nexport default TareaState;","import {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n            case OCULTAR_ALERTA:\n                return {\n                    alerta: null\n                }\n        default:\n            return state;\n    }\n}","import React, {useReducer} from 'react';\nimport alertaReducer from './alertasReducer';\nimport alertaContext from './alertasContext';\n\nimport {MOSTRAR_ALERTA, OCULTAR_ALERTA} from '../../types';\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\n\n    //Funciones\n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria,\n            }\n        });\n        //desaparece alert despues de 5 segundos\n        setTimeout(()=>{\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n    return (\n        <alertaContext.Provider\n            value = {{\n                alerta: state.alerta,\n                mostrarAlerta\n            }}\n        >\n            {props.children}\n        </alertaContext.Provider>\n    )\n};\nexport default AlertaState;","import {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION,\n} from '../../types';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case LOGIN_EXITOSO:\n        case REGISTRO_EXITOSO:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case OBTENER_USUARIO:\n            return{\n                ...state,\n                autenticado: true,\n                usuario: action.payload,\n                cargando: false,\n            }\n        case LOGIN_ERROR:\n        case CERRAR_SESION:\n        case REGISTRO_ERROR:\n            localStorage.removeItem('token');\n            return{\n                ...state,\n                token: null,\n                usuario: null,\n                autenticado: null,\n                mensaje: action.payload,\n                cargando: false,\n            }\n        default:\n            return state;\n    }\n}","import clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if(token) {\n        clienteAxios.defaults.headers.common['x-auth-token']  = token;\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;","import React, {useReducer} from 'react';\nimport AuthContext from './authContext';\nimport AuthReducer from './authReducer';\n\nimport clienteAxios from '../../config/axios';\nimport authToken from '../../config/authToken';\n\nimport {\n    REGISTRO_EXITOSO,\n    REGISTRO_ERROR,\n    OBTENER_USUARIO,\n    LOGIN_EXITOSO,\n    LOGIN_ERROR,\n    CERRAR_SESION,\n} from '../../types';\n\nconst AuthState = props => {\n    \n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n        cargando: true,\n    }\n\n    const [state, dispatch] = useReducer(AuthReducer, initialState);\n\n    const registrarUsuario = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/usuarios', datos);\n            console.log(respuesta.data);\n\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data,\n            })\n\n            //Obtener el usuario\n            usuarioAutenticado();\n        } catch (error) {\n            console.log(error.response);\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    //retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token');\n        if(token) {\n            authToken(token);\n        }\n        try {\n            const respuesta = await clienteAxios.get('/api/auth');\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            });\n        } catch (error) {\n            console.log(error)\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    //Cuando el usuario inicia sesion\n    const iniciarSesion = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos);\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            });\n\n            usuarioAutenticado();\n        } catch (error) {\n            \n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-error'\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n     //Cerrar sesion del usuario\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    return(\n        <AuthContext.Provider\n            value = {{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando : state.cargando,\n                registrarUsuario,\n                iniciarSesion,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider>\n    )\n}\nexport default AuthState;","import React, {useContext, useEffect} from 'react';\nimport {Route, Redirect} from 'react-router-dom';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst RutaPrivada = ({component: Component, ...props}) => {\n    const authContext = useContext(AuthContext);\n    const {autenticado, cargando, usuarioAutenticado} = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n        // eslint-disable-next-line\n    }, [])\n\n    return ( \n        <Route {...props} render={\n            props => !autenticado && !cargando \n                ? \n                    (\n                        <Redirect to=\"/\" />\n                    )\n                :\n                    (\n                        <Component {...props} />\n                    )\n        } />\n    );\n}\n \nexport default RutaPrivada;\n\n","import {BrowserRouter as Router, Switch, Route}from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\n\nimport ProyectoState from './context/proyectos/ProyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertaState from './context/alertas/alertasState';\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/authToken';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n\n//Revisar token\nconst token = localStorage.getItem('token');\nif(token){\n  tokenAuth(token);\n}\n\nfunction App() {\n  return (\n    <ProyectoState>\n      <TareaState>\n        <AlertaState>\n          <AuthState>\n            <Router>\n              <Switch>\n                <Route exact path=\"/\" component={Login} />\n                <Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n                <RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n              </Switch>\n            </Router>\n          </AuthState>\n        </AlertaState>\n      </TareaState>\n    </ProyectoState>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}